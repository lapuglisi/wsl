#!/usr/bin/env bash
trap "say_goodbye;" 2 9 12 15

if [ -z "${MTSOL_HOME}" ];
then
    echo;
    echo -e "\033[31m A variavel MTSOL_HOME nao esta definida. \033[0m";
fi

########################################
## Globais
########################################
MTSOL_CONTROL_EDITION="Gavioes da Fiel";
MTSOL_CONTROL_TITLE="MTSOL Control v1.0 - ${MTSOL_CONTROL_EDITION} Edition";
MTSOL_GERENCIADOR="mtGerenciador";
MTSOL_PROCESS_GREP="(mtGerenciador|mtTMSol|mtProcesso|mtPComMaq|mtPWSSol|mtPLog)"

MTSOL_CONTROL_ACTIONS="
start       'start        - Inicia o servico MTSOL'
stop        'stop         - Finaliza o servico MTSOL'
tail        'tail         - Visualiza os logs do MTSOL'
tail-other  'tail-other   - Visualiza outros logs do MTSOL'
strace      'strace       - Inicia o trace do ${MTSOL_GERENCIADOR}''
deploy      'deploy       - Instala um novo pacote do MTSOL em ${MTSOL_HOME}/bin'
quit        'quit         - Sai do MTSOL Control'"

MTSOL_CONTROL_ACTIONS_TOTAL=$(echo "${MTSOL_CONTROL_ACTIONS}" | wc -l);

########################################
## Functions
########################################
alias mtlog_file='"${MTSOL_HOME}/log/MTL_`date +%Y_%m_%d_%H00`.log"';

function say_goodbye()
{
	dialog --clear --timeout 10 --colors --ok-label "Eu que agradeço !" \
		--backtitle "${MTSOL_CONTROL_TITLE}" \
		--msgbox "\Z5Obrigado por usar o ${MTSOL_CONTROL_TITLE}\Zn" 20 50;

	clear;
	exit 0;
}

function show_error()
{
	dialog --clear --timeout 10 --colors --ok-label "Paciência..." \
		--backtitle "${MTSOL_CONTROL_TITLE}" \
		--msgbox "\Zr\Z1Oxi: $1\Zn" 20 50;

	clear;
	exit 1;
}

function show_gauge()
{
	dialog --timeout 2 --colors --backtitle "${MTSOL_CONTROL_TITLE}" \
		--gauge "$1" 30 120 0;
}

function mtlog_tail()
{
    dialog --backtitle "${MTSOL_CONTROL_TITLE}" \
       --tailbox mtllog_file 0 0;
}

function mtsol_start()
{
    # This script block executes what needs to be done and
    # sends the result to the gauge dialog
    local percent=0;
    (
		while [ ${percent} -lt 110 ];
		do
			echo "${percent}";
			echo "XXX"; # Dialog's trick - begin
			echo "\Zr\Z4Inicializando MTSOL (${percent}%)...\Zn";
			echo;
			ps_output=$(ps -ef | grep --color=never -E "${MTSOL_PROCESS_GREP}" | grep -v "grep");
			echo $"\Z1${ps_output}\Zn";
			echo "XXX"; # Dialog's trick - begin

			percent=$((percent + 20));
			sleep 1;
		done

		echo "100";
		echo "XXX";
		echo -e "\Zr\Z2--- MTSOL esta no ar! ---\Zn";
		echo;
		echo "Pressione qualquer tecla para continuar.";
		echo "XXX";
    ) | show_gauge "Inicializando MTSOL";

	read;
}

function mtsol_stop()
{
    # This scope executes what needs to be done and
    # sends the result to the gauge dialog
    local percent=0;
    (
	
	while [ ${percent} -lt 100 ]
	do
		echo "${percent}";
		echo "XXX"; # Magica do dialog - begin
		echo "Finalizando MTSOL (${percent}%)...";
		echo "XXX"; # Magica do dialog - end

		percent=$((percent + 10));
		sleep 1;
	done

    ) | show_gauge "Finalizando MTSOL";
}

while [ 1 ];
do
    action=$(
		dialog --colors --no-kill --stdout --menu \
		"${MTSOL_CONTROL_TITLE}" 30 100 ${MTSOL_CONTROL_ACTIONS_TOTAL} \
		${MTSOL_CONTROL_ACTIONS}
    );
	retcode=$?;

    if [ ${retcode} -ne 0 ];
	then
		say_goodbye;
		break;
	fi

    case "${action}" in
	"start")
	    mtsol_start;
	;;

	"stop")
	    mtsol_stop;
	;;

	"tail")
	    mtlog_tail;
	;;

	"deploy")
	    dialog --backtitle "${MTSOL_CONTROL_TITLE}" \
			--fselect "${MTSOL_HOME}" 0 0;
	;;

	"quit")
		break;
	;;

	*)
		show_error "Comando invalido '${action}'";
	;;
	esac
done

clear;
