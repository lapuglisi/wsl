#!/usr/bin/env bash
trap "say_goodbye;" 2 9 12 15

export DIALOGRC="`dirname $0`/dialog.rc";

if [ -z "${MTSOL_HOME}" ];
then
    echo;
    echo -e "\033[31m A variavel MTSOL_HOME nao esta definida. \033[0m";
fi

########################################
## Globais
########################################
MTSOL_CONTROL_EDITION="Gavioes da Fiel";
MTSOL_CONTROL_TITLE="MTSOL Control v1.0 - ${MTSOL_CONTROL_EDITION} Edition";
MTSOL_GERENCIADOR="mtGerenciador";
MTSOL_PROCESS_LIST="mtGerenciador,mtTMSol,mtProcesso,mtPComMaq,mtPWSSol,mtPLog,sra_sinc_base,stn_sinc_base,efc_sinc_base";

#### Comandos do menu
MTSOL_MENU_START="start";
MTSOL_MENU_STOP="stop";
MTSOL_MENU_TAIL="tail";
MTSOL_MENU_TAILOTHER="tail-other";
MTSOL_MENU_STRACE="strace";
MTSOL_MENU_DEPLOY="deploy";
MTSOL_MENU_QUIT="quit";

MTSOL_DIALOG_OPTIONS=(
${MTSOL_MENU_START}       "${MTSOL_MENU_START}        - Inicia o servico MTSOL",
${MTSOL_MENU_STOP}        "${MTSOL_MENU_STOP}         - Finaliza o servico MTSOL",
${MTSOL_MENU_TAIL}        "${MTSOL_MENU_TAIL}         - Visualiza os logs do MTSOL",
${MTSOL_MENU_TAILOTHER}   "${MTSOL_MENU_TAILOTHER}    - Visualiza outros logs do MTSOL",
${MTSOL_MENU_STRACE}      "${MTSOL_MENU_STRACE}       - Inicia o trace do ${MTSOL_GERENCIADOR}",
${MTSOL_MENU_DEPLOY}      "${MTSOL_MENU_DEPLOY}       - Instala um novo pacote do MTSOL em ${MTSOL_HOME}/bin",
${MTSOL_MENU_QUIT}        "${MTSOL_MENU_QUIT}         - Sai do MTSOL Control"
);
MTSOL_TOTAL_OPTIONS=7;

MSGBOX_SIZE=(15 100);

DIALOG=`which dialog`
DIALOG_ARGS="--colors --backtitle \"${MTSOL_CONTROL_TITLE}\" --title \"${MTSOL_CONTROL_TITLE}\"";

########################################
## Functions
########################################
function mtlog_file()
{
	echo "${MTSOL_HOME}/log/MTL_`date +%Y_%m_%d_%H00`.log";
}

function say_goodbye()
{
	${DIALOG} --timeout 10 --colors --ok-label "Eu que agradeço !" \
		--backtitle "${MTSOL_CONTROL_TITLE}" \
		--msgbox "Obrigado por usar o ${MTSOL_CONTROL_TITLE}" 10 75;

	clear;
	exit 0;
}

function show_error()
{
	${DIALOG} --timeout 10 --colors --ok-label "Paciência..." \
		--backtitle "${MTSOL_CONTROL_TITLE}" \
		--msgbox "\Z1$1\Zn" ${MSGBOX_SIZE[@]};

	clear;
	exit 1;
}

function show_msgbox()
{
	${DIALOG} --stdout --timeout 10 --clear --colors --ok-label " Suave " \
		--backtitle "${MTSOL_CONTROL_TITLE}" \
		--msgbox "$1" ${MSGBOX_SIZE[@]};
}

function show_gauge()
{
	${DIALOG} --timeout 2 --colors --backtitle "${MTSOL_CONTROL_TITLE}" \
		--gauge "$1" 40 150;
}

function show_start_menu()
{	
	${DIALOG} --backtitle "${MTSOL_CONTROL_TITLE}" --title "${MTSOL_CONTROL_TITLE}" --no-kill --stdout \
		--menu \
		"Selecione o comando abaixo" 30 100 ${MTSOL_TOTAL_OPTIONS} \
		"${MTSOL_DIALOG_OPTIONS[@]}"
}

function mtsol_strace()
{
	STRACE=`which strace`;
	if [ $? -ne 0 ];
	then
		show_error "O pacote 'strace' não está instalado nessa máquina.";
		return 0;
	fi

	####
	# Bloco de output para o programbox
	###
	(
		## Aqui o usuario pode escolher o processo que deseja stracear
		local mtsol_pid=$(ps -u ${USER} --no-headers -o pid | head -1);

		if [ -z "${mtsol_pid}" ];
		then
			echo;
			echo "O modulo ${MTSOL_GERENCIADOR} nao esta em execucao.";
			echo;
		else
			${STRACE} -p ${mtsol_pid} 2>&1;
		fi
	) 2>&1 | 
	${DIALOG} --stdout --title "strace - ${mtsol_pid}" \
		--programbox "strace - ${mtsol_pid}" 0 0
}

function show_start_menu()
{
	${DIALOG} --colors --no-kill --stdout --menu \
		"${MTSOL_CONTROL_TITLE}" 30 100 ${MTSOL_TOTAL_OPTIONS} \
		"${MTSOL_DIALOG_OPTIONS[@]}"
}

function mtlog_tail()
{
	choose_time="$1";	
	mtsol_log="";

	# 
	if [ $1 -eq 1 ];
	then
		log_time=$(
			${DIALOG} --stdout --clear --visit-items \
			--title "Escolha a hora do log." \
			--timebox "Escolha a hora do log." 0 0 \
				`date +%H` 0 0);

		[[ $? -ne 0 ]] && return 1;

		log_time=$(echo "${log_time}" | cut -d':' -f1);
		mtsol_log="${MTSOL_HOME}/log/MTL_`date +%Y_%m_%d`_${log_time}00.log";
	else
		mtsol_log=`mtlog_file`;
	fi

	if [ ! -f "${mtsol_log}" ];
	then
		show_error "O arquivo '${mtsol_log}' não foi encontrado.";
		return 1;
	fi

    ${DIALOG} --backtitle "${mtsol_log}" --title "${mtsol_log}" \
       --tailbox "${mtsol_log}" 0 0;
}

function mtsol_deploy()
{
	local deploy_file=$(
		${DIALOG} --backtitle "${MTSOL_CONTROL_TITLE}" \
		--dselect "${HOME}" 0 0;
	);
}

function mtsol_start()
{
    # This script block executes what needs to be done and
    # sends the result to the gauge dialog
    local percent=0;
    (
		while [ ${percent} -lt 110 ];
		do
			echo "${percent}";
			echo "XXX"; # Dialog's trick - begin
			echo "\Zr\Z4Inicializando MTSOL (${percent}%)...\Zn";
			echo;
			ps_output=$(ps -eH -C ${MTSOL_PROCESS_LIST} --no-headers -o pid,user,args);
			echo $"\Z1${ps_output}\Zn";
			echo "XXX"; # Dialog's trick - begin

			percent=$((percent + 20));
			sleep 1;
		done

		echo "100";
		echo "XXX";
		echo -e "\Z2--- MTSOL esta no ar! ---\Zn";
		echo;
		echo "Pressione qualquer tecla para continuar.";
		echo "XXX";
    ) | show_gauge "Inicializando MTSOL";

	read;
}

function mtsol_stop()
{
    # This scope executes what needs to be done and
    # sends the result to the gauge dialog
    local percent=0;
    (
		while [ ${percent} -lt 100 ]
		do
			echo "${percent}";
			echo "XXX"; # Magica do dialog - begin
			echo "\Z1Finalizando MTSOL (${percent}%)...\Zn";
			echo;
			ps_output=$(ps -eH -u "${USER}" -o pid,args);
			echo ${ps_output};
			echo "XXX"; # Magica do dialog - end

			percent=$((percent + 10));
			sleep 1;
		done

		echo "100";
		echo "XXX";
		echo -e "\Z1--- MTSOL finalizado. ---\Zn";
		echo;
		echo "Pressione qualquer tecla para continuar.";
		echo "XXX";
    ) | show_gauge "Finalizando MTSOL";

	read;
}

while [ 1 ];
do
    action=$(show_start_menu);
	retcode=$?;

    if [ ${retcode} -ne 0 ];
	then
		say_goodbye;
		break;
	fi

	case "${action}" in
	"${MTSOL_MENU_START}")
		mtsol_start;
	;;

	"${MTSOL_MENU_STOP}")
		mtsol_stop;
	;;

	"${MTSOL_MENU_TAIL}")
		mtlog_tail;
	;;

	"${MTSOL_MENU_TAILOTHER}")
		mtlog_tail 1;
	;;

	"${MTSOL_MENU_DEPLOY}")
		mtsol_deploy;
	;;

	"${MTSOL_MENU_STRACE}")
		mtsol_strace;
	;;

	"${MTSOL_MENU_QUIT}")
		break;
	;;

	*)
		show_error "Comando invalido '${action}'";
	;;
	esac
done

clear;
